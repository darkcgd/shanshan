<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


	<!-- Spring MVC 配置文件,包含网站跳转逻辑的控制,配置 -->
	<!-- 自动扫描web包 ,将带有注解的类 纳入spring容器管理 -->
	<context:component-scan base-package="com.shanshan"
							use-default-filters="false">
		<!-- 只扫描控制器 -->
		<context:include-filter type="annotation"
								expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 配置视图解析器 方便页面返回 -->
	<bean
			class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>



	<!-- 第一步:  创建自定义日期转换规则 -->
	<bean id="dateConvert" class="com.shanshan.util.DateConvert"/>
	<!-- 第二步： 创建convertion-Service ，并注入dateConvert-->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<ref bean="dateConvert"/>
			</set>
		</property>
	</bean>
	<!-- 第三步：注册处理器映射器/处理器适配器 ，添加conversion-service属性
    <mvc:annotation-driven conversion-service="conversionService"/>-->

	<!-- 两个标准配置 -->
	<!-- 将springMVC 不能处理的请求交给tomcat -->
	<mvc:default-servlet-handler />

	<!-- 能支持springMVC更高级的一些功能,JSR303校验 快捷的ajax-->
	<!-- 配置处理器映射器和处理器适配器 -->
	<mvc:annotation-driven conversion-service="conversionService"/>


	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<!-- <bean class="com.cgd.crud.interceptor.UserInterceptor"/> -->
		<mvc:interceptor>
			<mvc:mapping path="/user/*"/>
			<mvc:mapping path="/shop/*"/>
			<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
			<bean class="com.shanshan.interceptor.UserInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"/>
		<!-- 指定所上传文件的总大小不能超过5MB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="5242880"/>
		<!-- 最大内存大小 (10240)-->
		<property name="maxInMemorySize" value="40960" />
	</bean>


</beans>